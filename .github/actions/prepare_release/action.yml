name: prepare_release
description: Prepare React Native release
runs:
  using: composite
  steps:
    - name: Yarn install
      shell: bash
      run: yarn install --non-interactive
    - name: Validate version
      shell: bash
      run: node ./scripts/releases/validate-version.js --build-type release --version "${{ inputs.version }}"
    - name: Versioning workspace packages
      shell: bash
      run: |
        node scripts/releases/set-version "${{ inputs.version }}" --skip-react-native-version
    - name: Versioning react-native package
      shell: bash
      run: |
        node scripts/releases/set-rn-version.js -v "<< parameters.version >>" --build-type "release"
    - name: Creating release commit
      shell: bash
      run: |
        BRANCH="$(git branch --show-current)"
        NPM_TAG="$(node ./scripts/releases/compute-npm-tag.js --version ${{ inputs.version }} --branch $BRANCH)"

        if [[ "${{ inputs.is-latest-on-npm }}" ]]; then
          NPM_TAG="$(node ./scripts/releases/compute-npm-tag.js --is_latest_on_npm --version ${{ inputs.version }} --branch $BRANCH)"
        fi

        git commit -a -m "Release ${{ inputs.version }}" -m "#publish-packages-to-npm&$NPM_TAG"
        git tag -a "v${{ inputs.version }}" -m "v${{ inputs.version }}"
        GIT_PAGER=cat git show HEAD
    - name: Update "latest" tag if needed
      shell: bash
      if: ${{ inputs.tag == 'latest' }}
      run: |
        git tag -d "latest"
        git push origin :latest
        git tag -a "latest" -m "latest"
    - name: Pushing release commit
      shell: bash
      if: ${{ inputs.dry_run == false }}
      run: |
        CURR_BRANCH="$(git branch --show-current)"
        git push origin "$CURR_BRANCH" --follow-tags
